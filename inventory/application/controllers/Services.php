<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Services extends Admin_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Services_model');
        $this->load->model('User_model');
        $this->load->model('Items_model');
    } 

    /*
     * Listing of services
     */
    function index()
    {

        
        $data['services'] = $this->Services_model->get_all_services();
        // echo "<pre>"; print_r($data);exit();

    $driver_id =null;
    $vehicle_id =null;
    $date_service =null;
    $time_service =null;

    $event_ref =null;
    $client_name =null;
    $pickup_location =null;
    $destination =null;
    if (!empty($_POST['driver_id'])) {

    $driver_id = $_POST['driver_id'];
        }
    if (!empty($_POST['vehicle_id'])) {
   $vehicle_id = $_POST['vehicle_id'];
        }
    if (!empty($_POST['date_service'])) {
   $date_service = $_POST['date_service'];
        }
    if (!empty($_POST['time_service'])) {
   $time_service = $_POST['time_service'];
        }
    if (!empty($_POST['event_ref'])) {
   $event_ref = $_POST['event_ref'];
        }
    if (!empty($_POST['client_name'])) {
   $client_name = $_POST['client_name'];
        }
    if (!empty($_POST['pickup_location'])) {
   $pickup_location = $_POST['pickup_location'];
        }
    if (!empty($_POST['destination'])) {
   $destination = $_POST['destination'];
        }
        
        
        if ($driver_id) {
            $data['services'] = $this->Services_model->get_all_services($driver_id);
        }
        elseif ($vehicle_id) {
             // print_r("$vehicle_id");exit();
           $data['services'] = $this->Services_model->get_all_services($driver_id,$vehicle_id);
        }
        elseif ($date_service) {
             // print_r("$vehicle_id");exit();
           $data['services'] = $this->Services_model->get_all_services($driver_id,$vehicle_id,$date_service);
        }
        elseif ($time_service) {
             // print_r("$vehicle_id");exit();
           $data['services'] = $this->Services_model->get_all_services($driver_id,$vehicle_id,$date_service,$time_service);
        }
        elseif ($event_ref) {
             // print_r("$vehicle_id");exit();
           $data['services'] = $this->Services_model->get_all_services($driver_id,$vehicle_id,$date_service,$time_service,$event_ref);
        }
        elseif ($client_name) {
             // print_r("$vehicle_id");exit();
           $data['services'] = $this->Services_model->get_all_services($driver_id,$vehicle_id,$date_service,$time_service,$event_ref,$client_name);
        }
        elseif ($pickup_location) {
             // print_r("$vehicle_id");exit();
           $data['services'] = $this->Services_model->get_all_services($driver_id,$vehicle_id,$date_service,$time_service,$event_ref,$client_name,$pickup_location,$destination);
        }
        elseif ($destination) {
             // print_r("$vehicle_id");exit();
           $data['services'] = $this->Services_model->get_all_services($driver_id,$vehicle_id,$date_service,$time_service,$event_ref,$client_name,$destination);
        }
        else
        {
             $data['services'] = $this->Services_model->get_all_services();
        }
        // print_r($data['services']);exit();
        
        $data['_view'] = 'services/index';
        $this->load->view('layouts/main',$data);
    }
    function results($id)
    {
        $data['services'] = $this->Services_model->get_all_services2($id);
     // echo "<pre>";   print_r($data['services']); exit();
        $data['id'] = $id;
        $data['_view'] = 'services/greeting_sign';
        $this->load->view('layouts/main',$data);
    }


    /*
     * Adding a new services
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('contact_email','Contact Email','required');
        $data['description'] = $this->Items_model->get_all_items();
        $data['driver'] = $this->User_model->get_all_driver();
        $data['service_type'] = $this->Services_model->get_all_service_type();
	
		
		if($this->form_validation->run())     
        {   
       // echo "<pre>";   print_r($_POST);exit();
          if($this->input->post('part_no')==null)
            {
               $part_no2 = empty($this->input->post('part_no')) ? 0 : $$this->input->post('part_no'); 
            }
            else
            {
         $part_no2 = $_POST['part_no'];
            }
            if($this->input->post('description')==null)
            {
               $description2 = empty($this->input->post('description')) ? 0 : $$this->input->post('description'); 
            }
            else
            {
         $description2 = $_POST['description'];
            }
             if($this->input->post('quantity')==null)
            {
               $quantity2 = empty($this->input->post('quantity')) ? 0 : $$this->input->post('quantity'); 
            }
            else
            {
         $quantity2 = $_POST['quantity'];
            }
                         if($this->input->post('ppu')==null)
            {
               $ppu2 = empty($this->input->post('ppu')) ? 0 : $$this->input->post('ppu'); 
            }
            else
            {
         $ppu2 = $_POST['ppu'];
            }
                       if($this->input->post('location')==null)
            {
               $location2 = empty($this->input->post('location')) ? 0 : $$this->input->post('location'); 
            }
            else
            {
         $location2 = $_POST['location'];
            }


            $params = array(
				'contact_email' => $this->input->post('contact_email'),
                'pr_number' => $this->input->post('pr_number'),
                'pr_status' => $this->input->post('pr_status'),
                'delivery_date' => $this->input->post('delivery_date'),
                'tagging_req' => $this->input->post('tagging_req'),
                'approval_req' => $this->input->post('approval_req'),
                'associated_systems' => $this->input->post('associated_systems'),
                'no_of_items' => $this->input->post('no_of_items'),
				'created_by' => $this->session->userdata('first_name'),
            );

            
// echo "<pre>";   print_r($_POST);exit();
            if (count($part_no2) == $this->input->post('no_of_items')) {
                $services_id = $this->Services_model->add_services($params);
                if($part_no2!=null)
                {
                    foreach($part_no2 as $key => $part_no) {
                          $part_no = $part_no2[$key];
                          $description = $description2[$key];
                          $quantity = $quantity2[$key];
                           $ppu = $ppu2[$key];
                            $location = $location2[$key];
                          $params2 = array(
                                    'part_no' => $part_no,
                                    'description' => $description,
                                    'quantity' => $quantity,
                                    'ppu' =>  $ppu,
                                    'location' =>  $location,
                                    'rec_id' => $services_id,
                                    
                                );
                               $giving_id = $this->Services_model->add_services2($params2);
                     }
                }
             redirect('Procurements');
                
            }else{
                // echo 'Number of items and detials of items are not same!!!';
                  function_alert("Number of items and detials of items are not same!!!"); 

                  
                  $data['_view'] = 'services/add';
        $this->load->view('layouts/main',$data);
            }
                

        }
        else
        {            
            $data['_view'] = 'services/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a services
     */
    function edit($id)
    {   
        // check if the services exists before trying to edit it
        $data['services'] = $this->Services_model->get_services($id);
        // $data['description'] = $this->Items_model->get_all_items();
        
        if(isset($data['services']['id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('contact_email','Contact Email','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
				       'contact_email' => $this->input->post('contact_email'),
                'pr_number' => $this->input->post('pr_number'),
                'pr_status' => $this->input->post('pr_status'),
                'delivery_date' => $this->input->post('delivery_date'),
                'tagging_req' => $this->input->post('tagging_req'),
                'approval_req' => $this->input->post('approval_req'),
                'associated_systems' => $this->input->post('associated_systems'),
                'no_of_items' => $this->input->post('no_of_items'),
                );
              
                $this->Services_model->update_services($id,$params);            
                redirect('Procurements');
            }
            else
            {
                $data['_view'] = 'services/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The services you are trying to edit does not exist.');
    } 



       function update_status($id)
    {   
        // check if the services exists before trying to edit it
        $data['services'] = $this->Services_model->get_services($id);
        
        if(isset($data['services']['id']))
        {
            $this->load->library('form_validation');
 
                $params = array(
                'picked_status' => $this->input->post('status'),
                'modified_by' => $this->session->userdata('first_name'),
                );
              
                $this->Services_model->update_services($id,$params);            
                redirect('Procurements');

            }
        else
            show_error('The services you are trying to Update does not exist.');
    } 

    /*
     * Deleting services
     */
    function remove($id)
    {
        $services = $this->Services_model->get_services($id);

        // check if the services exists before trying to delete it
        if(isset($services['id']))
        {
            $this->Services_model->delete_services($id);
            redirect('Procurements');
        }
        else
            show_error('The services you are trying to delete does not exist.');
    }
    
}
function function_alert($message) { 
      
    // Display the alert box  
    echo "<script>alert('$message');</script>"; 
} 
